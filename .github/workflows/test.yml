name: Test

permissions:
  contents: write

on: [push]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  rust-test:
    strategy:
      matrix:
        os: [
          ubuntu-24.04,
          windows-latest,
          # macos-latest,
          # macos-13,
        ]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: cargo test
        # env:
        #   LOG_LEVEL: TRACE
        run: |
          cargo test

      - name: cargo run
        # env:
        #   LOG_LEVEL: TRACE
        run: |
          echo $PATH
          cargo run -- starship
          cargo run -- https://github.com/ahaoboy/mujs-build
          cargo run -- https://github.com/ahaoboy/neofetch
          cargo run -- https://github.com/axodotdev/cargo-dist
          cargo run -- https://github.com/denoland/deno
          cargo run -- https://github.com/ahaoboy/easy-install/releases/latest/download/ffmpeg.json
          cargo run -- ./dist-manifest/zig.json
          cargo run -- ./dist-manifest/FiraCode.json
          cargo run -- ./dist-manifest/JetBrainsMono.json
          cargo run -- ./dist-manifest/llrt.json
          cargo run -- ./dist-manifest/alist.json
          cargo run -- ./dist-manifest/bun.json
          cargo run -- ./dist-manifest/fnm.json
          cargo run -- ./dist-manifest/ryubing.json
          cargo run -- ./dist-manifest/7zip.json
          cargo run -- ./dist-manifest/yt-dlp.json
          cargo run -- ./dist-manifest/pnpm.json
          cargo run -- ./dist-manifest/biome.json
          cargo run -- ./dist-manifest/quickjs-ng.json
          cargo run -- ./dist-manifest/boa.json
          cargo run -- ./dist-manifest/graaljs.json
          cargo run -- ./dist-manifest/hermes.json
          cargo run -- ./dist-manifest/xst.json
          cargo run -- ./dist-manifest/esbuild.json

          echo $PATH

      - name: install on ubuntu
        if: matrix.os == 'ubuntu-24.04'
        run: |
          cargo run -- https://github.com/ahaoboy/jsc-build
          cargo run -- https://github.com/ahaoboy/spidermonkey-build
          cargo run -- https://github.com/ahaoboy/v8-build
          cargo run -- ./dist-manifest/ffmpeg.json

      - name: install on windows
        if: matrix.os == 'windows-latest'
        run: |
          cargo run -- ./dist-manifest/ffmpeg.json
          cargo run -- ./dist-manifest/screentogif.json
          cargo run -- ./dist-manifest/wiztree.json
          cargo run -- ./dist-manifest/mpv-easy.json
          cargo run -- ./dist-manifest/mpv.json
          cargo run -- ./dist-manifest/uevr.json
          cargo run -- ./dist-manifest/rcedit.json

      - name: test which on windows
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          $env:PATH -split ';' | Write-Host

          Copy-Item -Path "C:\Users\runneradmin\easy-install\graaljs\bin\js.exe" -Destination "C:\Users\runneradmin\easy-install\graaljs\bin\graaljs.exe"

          get-command mujs
          get-command neofetch
          get-command dist
          get-command deno
          get-command ffmpeg
          get-command zig
          get-command llrt
          get-command alist
          get-command bun
          get-command fnm
          get-command 7z
          get-command starship
          get-command ScreenToGif
          get-command yt-dlp
          get-command pnpm
          get-command biome
          get-command qjs
          get-command qjsc
          get-command boa
          get-command graaljs
          get-command hermes
          get-command xst
          get-command mpv
          get-command esbuild
          get-command rcedit

      - name: test which on ubuntu
        if: matrix.os == 'ubuntu-24.04'
        run: |
          echo $PATH
          cp /usr/local/bin/graaljs/bin/js /usr/local/bin/graaljs/bin/graaljs
          # cat ~/.bashrc
          # source ~/.bashrc
          # echo $PATH

          which jsc
          which js
          which d8
          which deno
          which ffmpeg
          which zig
          which llrt
          which alist
          which bun
          which fnm
          which 7z
          which starship
          which yt-dlp
          which pnpm
          which biome
          which qjs
          which qjsc
          which boa
          which graaljs
          which hermes
          which xst
          which esbuild

          echo "typeof globalThis.print>'u'&&(globalThis.print=console.log);print(2);" >> test.js
          d8 ./test.js
          js ./test.js
          jsc ./test.js

  js-test:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: vitest
        run: |
          pnpm install
          pnpm run build
          pnpm run test:run
      - name: test
        run: |
          ./cli/cli.js https://github.com/ahaoboy/easy-install
          ./cli/cli.js https://github.com/denoland/deno

      - name: test windows
        run: |
          ./cli/cli.js ./dist-manifest/7zip.json

      - name: test ubuntu
        run: |
          ./cli/cli.js ./dist-manifest/boa.json

      - name: test macos
        run: |
          ./cli/cli.js ./dist-manifest/quickjs-ng.json
